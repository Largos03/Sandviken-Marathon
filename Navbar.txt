<header
        class:header-hidden={!isHeaderVisible}
        class:header-visible={isHeaderVisible}
        class="fixed z-50 w-[100vw] border-b border-primary/10 bg-secondary/85 shadow-lg backdrop-blur-lg"
    >
        <div class="container mx-auto flex items-center justify-between px-4 py-4">
            <div class="flex flex-col items-center space-x-4">
                <a href="/" class="flex items-center space-x-2">
                    {#key $mode}
                        <img {src} alt="SandHack Logo" class="h-12 !max-w-none" />
                    {/key}
                </a>
            </div>
 
            <nav class="hidden space-x-4 md:flex">
                <Button href="/" variant="ghost"><Home class="mr-2 h-4 w-4" /> Hem</Button>
                <Button href="/events" variant="ghost"
                    ><CalendarDays class="mr-2 h-4 w-4" /> Evenemang</Button
                >
                <Button href="/nyheter" variant="ghost"
                    ><NewspaperIcon class="mr-2 h-4 w-4" /> Nyheter</Button
                >
                <Button href="/info" variant="ghost"><Library class="mr-2 h-4 w-4" />Om oss</Button>
                <Button href="/info/foralder" variant="ghost"
                    ><Users class="mr-2 h-4 w-4" /> För föräldrar</Button
                >
            </nav>
 
            <div class="flex items-center space-x-4">
                <Button class="hidden lg:flex" onclick={toggleMode} variant="outline" size="icon">
                    <Sun
                        class="h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0"
                    />
                    <Moon
                        class="absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100"
                    />
                    <span class="sr-only">Toggle theme</span>
                </Button>
 
                <DropdownMenu>
                    <DropdownMenuTrigger>
                        <MenuIcon class="h-6 w-6" />
                    </DropdownMenuTrigger>
                    <DropdownMenuContent class="mr-6 min-w-40 lg:mr-2 ">
                        <DropdownMenuLabel class="lg:hidden">Sidor</DropdownMenuLabel>
 
                        <a class=" hover:cursor-grab lg:hidden" href="/events">
                            <DropdownMenuItem>
                                <CalendarDays class="h-4 w-4" />
                                <p class="hover:cursor-pointer">Evenemang</p>
                            </DropdownMenuItem>
                        </a>
                        <a class=" hover:cursor-grab lg:hidden" href="/nyheter">
                            <DropdownMenuItem>
                                <NewspaperIcon class="h-4 w-4" />
                                <p class="hover:cursor-pointer">Nyheter</p>
                            </DropdownMenuItem>
                        </a>
                        <a class=" hover:cursor-grab lg:hidden" href="/info">
                            <DropdownMenuItem>
                                <Library class="h-4 w-4" />
                                <p class="hover:cursor-pointer">Om oss</p>
                            </DropdownMenuItem>
                        </a>
                        <a class=" hover:cursor-grab lg:hidden" href="/info/foralder">
                            <DropdownMenuItem>
                                <Users class="h-4 w-4" />
                                <p class="hover:cursor-pointer">För föräldrar</p>
                            </DropdownMenuItem>
                        </a>
                        {#if data?.user?.id}
                            <DropdownMenuSeparator />
                            <DropdownMenuLabel>Mitt Konto</DropdownMenuLabel>
 
                            <a class=" hover:cursor-grab" href="/my/settings/profile">
                                <DropdownMenuItem
                                    ><User class="h-4 w-4" />
                                    <p class="hover:cursor-pointer">Profil</p></DropdownMenuItem
                                >
                            </a>
 
                            <a class=" hover:cursor-pointer" href={`/mina/${data.user.id}/biljetter`}>
                                <DropdownMenuItem>
                                    <Ticket class="h-4 w-4" />
                                    <p class="hover:cursor-pointer">Biljetter</p>
                                </DropdownMenuItem>
                            </a>
 
                            <DropdownMenuItem onclick={() => LogOutSubmit()}>
                                <LogOut class="h-4 w-4" />
 
                                <button onclick={() => LogOutSubmit()} type="submit">Logga ut</button>
                            </DropdownMenuItem>
                        {/if}
 
                        <form id="logoutForm" action="/logout" method="post"></form>
                        <DropdownMenuLabel class="">Förening</DropdownMenuLabel>
                        <DropdownMenuSeparator />
                        <DropdownMenuItem>
                            <Scale class="h-4 w-4" />
                            <a href="/forening/stadgar">Stadgar</a>
                        </DropdownMenuItem>
                        <DropdownMenuItem>
                            <Book class="h-4 w-4" />
                            <a href="/forening/regler">Regler</a>
                        </DropdownMenuItem>
 
                        <DropdownMenuItem onclick={toggleMode} class="lg:hidden">
                            <p>Ändra tema:</p>
 
                            <Button class="flex" variant="outline" size="icon">
                                <Moon
                                    class="absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100"
                                />
                                <Sun
                                    class="h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0"
                                />
                                <span class="sr-only">Toggle theme</span>
                            </Button>
                        </DropdownMenuItem>
                    </DropdownMenuContent>
                </DropdownMenu>
 
                {#if data?.user?.id}
                    <Avatar>
                        <AvatarImage
                            src={getPBImageURL(data.user.collectionId, data.user.id, data.user.avatar)}
                            alt="User"
                        />
                        <AvatarFallback>U</AvatarFallback>
                    </Avatar>
                {:else}
                    <Button href="/login" variant="outline">Logga in</Button>
                {/if}
            </div>
        </div>
    </header>
 
    let isHeaderVisible = $state(true); // Tracks if the header is visible
    let lastScrollY = 0; // Tracks the last scroll position
    let upScrollDistance = 0; // Tracks the upward scroll distance
    let downScrollDistance = 0; // Tracks the downward scroll distance
 
onMount(() => {
    
 
        const handleScroll = () => {
            const currentScrollY = window.scrollY;
 
            if (currentScrollY > lastScrollY) {
                // Scrolling down
                downScrollDistance += currentScrollY - lastScrollY;
                upScrollDistance = 0; // Reset upward scroll distance
 
                if (currentScrollY > hideThreshold && downScrollDistance > 0) {
                    isHeaderVisible = false; // Hide the header
                }
            } else {
                // Scrolling up
                upScrollDistance += lastScrollY - currentScrollY;
                downScrollDistance = 0; // Reset downward scroll distance
 
                if (upScrollDistance >= showTolerance) {
                    isHeaderVisible = true; // Show the header
                }
            }
 
            lastScrollY = currentScrollY; // Update last scroll position
        };
 
        window.addEventListener('scroll', handleScroll);
 
        return () => {
            window.removeEventListener('scroll', handleScroll);
        };
    });
 
// Adjustable parameters
    let hideThreshold = 150; // Pixels from the top before the header hides
    let showTolerance = 125; // Pixels scrolled up to show the header again
 